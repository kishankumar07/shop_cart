<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />

    <style>
      body {
        background-color: #ffffff;
      }

      .container {
        margin-top: 50px;
      }

      .otp-field input {
        height: 45px;
        width: 42px;
        border-radius: 6px;
        outline: none;
        font-size: 1.125rem;
        text-align: center;
        border: 1px solid #292323;
      }

      .otp-field input:focus {
        box-shadow: 0 1px 0 rgba(194, 182, 182, 0.1);
      }

      .otp-field input::-webkit-inner-spin-button,
      .otp-field input::-webkit-outer-spin-button {
        display: none;
      }

      #verifyButton {
        margin-top: 15px;
      }
    </style>
    <title>Document</title>
  </head>
  <body>
    <!-- Toast start from here-->

    <!-- <div
      class="position-fixed top-0 start-50 translate-middle-x p-3"
      style="z-index: 11"
    > -->
    <!-- <div id="myToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <strong class="mr-auto">Alert</strong>
          <small> <%= new Date().toLocaleTimeString() %></small>
          <button
            type="button"
            class="ml-2 mb-1 close"
            data-dismiss="toast"
            aria-label="Close"
          >
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="toast-body">OTP has been sent to <%= email %></div>
      </div>
    </div> -->

    <!-- Toast ends here-->

    <div class="container">
      <div class="row justify-content-center">
        <div class="col-12 col-md-6 col-lg-4">
          <div class="card bg-white mt-5 border-3">
            <div class="card-body p-5 text-center">
              <h4>Verify Email</h4>
              <p>Please enter the OTP sent to <%=email%>.</p>

              <div
                class="otp-field input-container d-flex flex-row justify-content-center mt-2"
              >
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num1"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="first"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num2"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="second"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num3"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="third"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num4"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="fourth"
                />
                <!-- <input
                  type="text"
                  class="m-1 text-center form-control rounded"
                  maxlength="1"
                  name="fifth"
                /> -->
              </div>

              <!-- For getting the userId via hidden form -->
              <input
                class="userId"
                type="text"
                name="id"
                value="<%= OtpUserId %>"
                hidden
              />

              <button
                id="verifyButton"
                class="btn btn-success px-4 mb-3"
                onclick="verifyOTP()"
              >
                Verify
              </button>

              <button
                id="resendButton"
                class="btn btn-secondary px-4"
                onclick="resendOtp()"
                hidden="true"
              >
                Resend
              </button>

              <div>
               <p id="otp-text"></p> 
                <span id="timer"></span>
              </div>
              <p id="otp-error" class="text-danger text-center"></p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      function focusNext(event) {
        const currentInput = event.target;
        // console.log(`currentINput: ${currentInput}`);
        const nextInput = currentInput.nextElementSibling;
        // console.log(`next input: ${nextInput}`);

        if (currentInput.value.length === 1 && nextInput) {
          nextInput.focus();
        }
      }

      function focusPrevious(event) {
        const currentInput = event.target;
        const previousInput = currentInput.previousElementSibling;

        if (event.key === "Backspace" && !currentInput.value && previousInput) {
          previousInput.focus();
        }
      }
      // The value passed from create User and send to emailOtp.ejs is assigned to otpUserId
      const otpUserId = document.querySelector(".userId").value;

      //After clikcing the verify button
      function verifyOTP() {
        // e.preventDefault();
        console.log(
          `This is the userId got when i rendered the emailOtp page :${otpUserId}`
        );
        //alerting the otp entered
        console.log("verify OTP part of emailOtp.ejs!!");
        const num1 = document.getElementById("num1").value;
        const num2 = document.getElementById("num2").value;
        const num3 = document.getElementById("num3").value;
        const num4 = document.getElementById("num4").value;

        let otp = "";
        document.querySelectorAll(".otp-input").forEach(function (input) {
          otp += input.value;
        });
        // alert("Entered OTP: " + otp);
// 
        const otpErrorElement = document.getElementById("otp-error");
        
        fetch("/verifyOtp", {
          method: "POST",
          body: JSON.stringify({
            num1,
            num2,
            num3,
            num4,
            
            otpUserId,
          }),
          headers: {
            "content-type": "application/json;charset=utf-8",
          },
          credentials: "include",
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("data : ", data);
            if (data.otp == false) {   
                          
              // otpErrorElement.textContent = data.message;
              // setTimeout(()=>{
              //   window.location.href = "/error";
              // },3000) 
             
              
            } else if (data.otp == "expired") {
              otpErrorElement.textContent = data.message;
            }
              else if (data.otp == "lessNum") {
              otpErrorElement.textContent = data.message;
            } else if (data.otp == "invalid") {
              otpErrorElement.textContent = data.message;
            } else if (data.otp == "noRecord") {
              otpErrorElement.textContent = data.message;
            } else if (data.otp == true) {
              window.location.href = "/";
            }
          })
          .catch((error) => {
            // Handle errors
            console.error("Error:", error.message);
          });
        setTimeout(() => {
          otpErrorElement.textContent = "";
        }, 6000);
      }
      let resendOtpButton = document.getElementById("resendButton");
  

      //timer for the otp
      function timer() {
        let secondsRemaining = 60;
        let timerText=document.getElementById('otp-text')
        let display = document.getElementById("timer");
        // let resendOtpButton = document.getElementById("resendButton");

//here i need to reuse this clear interval , when otp got removed from database due to efficientless 
let timerInterval = setInterval(() => {
          display.innerHTML = `Resend otp after: ${secondsRemaining} seconds`;

          if (secondsRemaining <= 0) {
            clearInterval(timerInterval);
            display.innerHTML = "";
            timerText.innerHTML="";
            resendOtpButton.hidden = false;
          } else {
            secondsRemaining--;
          }
        }, 1000);
      }
      //load the timer when otp page loaded
      window.onload = function () {
        timer();
      };

      function resendOtp() {

        //for timer to tick again
        
        timer();
      
        //ends here

        fetch(`/resendOtp?id=${otpUserId}`, {
          method: "GET",
          headers: {
            "content-type": "application/json;charset=utf-8",
          },
        })
         
      
        .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
          })
          .then((data) => {
            console.log("this is data come from the req:" + data);
          })
          .catch((error) => console.log("this is error from:" + error));
      }

    
      
    </script>
  </body>
</html>


